// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCGAPYS.Datos;

#nullable disable

namespace ProyectoCGAPYS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714065141_Actualizar_Proyectos")]
    partial class Actualizar_Proyectos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoCGAPYS.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Conceptos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoriaFk")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaFk");

                    b.ToTable("Conceptos");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Dependencias", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Dependencias");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Estimaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaEstimacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdProyectoFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(15, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProyectoFk");

                    b.ToTable("Estimaciones");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Fases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Fases");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Proyectos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaFinalizacionAprox")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCampusFk")
                        .HasColumnType("int");

                    b.Property<string>("IdDependenciaFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IdFaseFk")
                        .HasColumnType("int");

                    b.Property<string>("IdTipoFondoFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTipoProyectoFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreAnteproyecto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreProyecto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("decimal(15, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCampusFk");

                    b.HasIndex("IdDependenciaFk");

                    b.HasIndex("IdFaseFk");

                    b.HasIndex("IdTipoFondoFk");

                    b.HasIndex("IdTipoProyectoFk");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Proyectos_Costos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("IdConceptoFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdProyectoFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(15, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdConceptoFk");

                    b.HasIndex("IdProyectoFk");

                    b.ToTable("Proyectos_Costos");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.TiposFondo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TiposFondo");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.TiposProyecto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TiposProyecto");
                });

            modelBuilder.Entity("ProyectoCGAPYS.ViewModels.FaseViewModel", b =>
                {
                    b.Property<string>("Fase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalProyectos")
                        .HasColumnType("int");

                    b.ToTable("FaseViewModels");
                });

            modelBuilder.Entity("ProyectoCGAPYS.ViewModels.FondoViewModel", b =>
                {
                    b.Property<decimal>("MontoAutorizado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoEjercido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreFondo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("FondoViewModels");
                });

            modelBuilder.Entity("ProyectoCGAPYS.ViewModels.KPIsViewModel", b =>
                {
                    b.Property<decimal>("BalanceGeneralDisponible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotalEjercido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PresupuestoTotalAutorizado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProyectosActivos")
                        .HasColumnType("int");

                    b.Property<int>("ProyectosTotales")
                        .HasColumnType("int");

                    b.ToTable("KPIsViewModels");
                });

            modelBuilder.Entity("ProyectoCGAPYS.ViewModels.ProyectoAlertaViewModel", b =>
                {
                    b.Property<int?>("DiasTranscurridos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ProyectoAlertaViewModels");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Conceptos", b =>
                {
                    b.HasOne("ProyectoCGAPYS.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoriaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Estimaciones", b =>
                {
                    b.HasOne("ProyectoCGAPYS.Models.Proyectos", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IdProyectoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Proyectos", b =>
                {
                    b.HasOne("ProyectoCGAPYS.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("IdCampusFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCGAPYS.Models.Dependencias", "Dependencia")
                        .WithMany()
                        .HasForeignKey("IdDependenciaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCGAPYS.Models.Fases", "Fase")
                        .WithMany("Proyectos")
                        .HasForeignKey("IdFaseFk");

                    b.HasOne("ProyectoCGAPYS.Models.TiposFondo", "TipoFondo")
                        .WithMany()
                        .HasForeignKey("IdTipoFondoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCGAPYS.Models.TiposProyecto", "TipoProyecto")
                        .WithMany()
                        .HasForeignKey("IdTipoProyectoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Dependencia");

                    b.Navigation("Fase");

                    b.Navigation("TipoFondo");

                    b.Navigation("TipoProyecto");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Proyectos_Costos", b =>
                {
                    b.HasOne("ProyectoCGAPYS.Models.Conceptos", "Concepto")
                        .WithMany()
                        .HasForeignKey("IdConceptoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCGAPYS.Models.Proyectos", "Proyecto")
                        .WithMany("CostosDelProyecto")
                        .HasForeignKey("IdProyectoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concepto");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Fases", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("ProyectoCGAPYS.Models.Proyectos", b =>
                {
                    b.Navigation("CostosDelProyecto");
                });
#pragma warning restore 612, 618
        }
    }
}
