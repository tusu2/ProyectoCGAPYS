<div id="contenido-principal">
    @{
        // Cargamos el contenido inicial del index usando la nueva vista parcial
        await Html.RenderPartialAsync("_IndexContentPartial");
    }
</div>

@section Scripts {
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
      
   
        // Este código se ejecuta solo en esta página
        document.addEventListener('DOMContentLoaded', () => {

        
            const contenedor = document.getElementById('contenido-principal');


            const mainContainer = document.querySelector('main .container');

            // Si lo encuentra, le quita la clase 'container' y le pone 'container-fluid'
            if (mainContainer) {
                mainContainer.classList.remove('container');
                mainContainer.classList.add('container-fluid');
            }

            inicializarLogicaIndex();


            // --- Parte 1: Cargar la vista parcial al hacer clic en el botón ---
           

            // --- Parte 2: El "Súper Listener" Delegado (VERSIÓN FINAL Y CORREGIDA) ---
            contenedor.addEventListener('click', function (event) {
                const btnAsignar = event.target.closest('#btn-asignar-prioridades');
                if (btnAsignar) {
                    contenedor.innerHTML = '<h3 class="text-center">Cargando...</h3>';
                    fetch('@Url.Action("AsignarPrioridades", "Proyecto")')
                        .then(response => response.text())
                        .then(html => {
                            contenedor.innerHTML = html;
                        });
                    return; // Importante: detenemos la ejecución aquí
                }
                const btnRegresar = event.target.closest('#btn-regresar-index');
                if (btnRegresar) {
                    event.preventDefault();
                    contenedor.innerHTML = '<h3 class="text-center">Cargando...</h3>';
                    fetch('@Url.Action("GetIndexContent", "Proyecto")')
                        .then(response => response.text())
                        .then(html => {
                            contenedor.innerHTML = html;
                            if (typeof inicializarLogicaIndex === 'function') {
                                inicializarLogicaIndex();
                            }   
                        });
                    return; // Detenemos para no ejecutar otras lógicas
                }
                // ---- Lógica para los BOTONES DE PRIORIDAD (sin cambios) ----
                const priorityButton = event.target.closest('.btn-prioridad');
                if (priorityButton) {
                    event.preventDefault();
                    event.stopPropagation();

                    const proyectoId = priorityButton.dataset.id;
                    const nuevaPrioridad = priorityButton.dataset.prioridad;
                    const card = document.getElementById(`card-${proyectoId}`);

                    card.classList.add('card-disabled');
                    fetch(`/Proyecto/ActualizarPrioridad?id=${proyectoId}&prioridad=${nuevaPrioridad}`, { method: 'POST' })
                        .then(response => {
                            if (response.ok) {
                                card.classList.add(`priority-selected-${nuevaPrioridad}`);
                            } else {
                                alert('Error al actualizar la prioridad.');
                                card.classList.remove('card-disabled');
                            }
                        });
                    return; // Detenemos la ejecución para no interferir con el despliegue
                }


                // ---- Lógica para DESPLEGAR DETALLES (NUEVA Y ROBUSTA) ----
                const clickableArea = event.target.closest('.clickable-area');
                if (clickableArea) {
                    const clickedCard = clickableArea.closest('.project-card');
                    const clickedPanel = document.getElementById(`details-container-${clickedCard.dataset.id}`);
                    const wasAlreadyActive = clickedPanel.classList.contains('active');

                    // 1. SIEMPRE cerramos todo primero para limpiar el estado.
                    document.querySelectorAll('.project-details-panel.active').forEach(openPanel => {
                        openPanel.classList.remove('active');
                    });
                    document.querySelectorAll('.project-card.active').forEach(activeCard => {
                        activeCard.classList.remove('active');
                    });

                    // 2. Si la tarjeta que clickeamos NO estaba abierta, la abrimos.
                    if (!wasAlreadyActive) {
                        clickedCard.classList.add('active');
                        clickedPanel.classList.add('active');

                        // Cargar datos si es la primera vez que se abre
                        if (clickedPanel.innerHTML.trim() === '') {
                            const proyectoId = clickedCard.dataset.id;
                            clickedPanel.innerHTML = '<p>Cargando detalles...</p>';
                            fetch(`/Proyecto/GetProyectoDetalles?id=${proyectoId}`)
                                .then(response => response.json())
                                .then(result => {
                                    if (result.success) {
                                        const data = result;
                                        clickedPanel.innerHTML = `
                                                                            <div class="details-grid">
                                                                                <div><span>Responsable</span><p>${data.nombreResponsable}</p></div>
                                                                                <div><span>Presupuesto</span><p>${data.presupuesto}</p></div>
                                                                                <div><span>Correo</span><p>${data.correo}</p></div>
                                                                                <div><span>Celular</span><p>${data.celular}</p></div>
                                                                                <div><span>Fecha de Solicitud</span><p>${data.fechaSolicitud}</p></div>
                                                                                <div><span>Fecha de Finalización Aprox.</span><p>${data.fechaFinalizacion}</p></div>
                                                                                <div><span>Campus</span><p>${data.campus}</p></div>
                                                                                <div><span>Fase Actual</span><p>${data.fase}</p></div>
                                                                            </div>
                                                                            <hr>
                                                                            <div><span>Descripción del Proyecto</span><p>${data.descripcion}</p></div>
                                                                        `;
                                    } else {
                                        clickedPanel.innerHTML = '<p class="text-danger">No se pudieron cargar los detalles.</p>';
                                    }
                                });
                        }
                    }
                }
            });
            

                // ---- Lógica para el NUEVO BOTÓN DE REGRESAR ----
             

        });


    </script>
}