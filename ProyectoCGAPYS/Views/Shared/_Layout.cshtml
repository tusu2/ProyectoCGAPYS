@{
    // Obtenemos el nombre del controlador y la acción de la página actual
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProyectoCGAPYS</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    @Html.Partial("_Splash")
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark fixed-top" style="background-color: #0B2D48;">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Dashboard" asp-action="Index">
                    <img src="~/Img/Logo_de_la_UAdeC.svg.png" alt="Logo" class="d-inline-block align-text-top" style="height: 60px; margin-right: 10px;">
                 
                </a>
      
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link @(currentController == "Dashboard" ? "active" : "")" asp-controller="Dashboard" asp-action="Index">
                                <i class="bi bi-grid-1x2-fill"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(currentController == "Proyecto" ? "active" : "")" asp-controller="Proyecto" asp-action="Index">
                                <i class="bi bi-map-fill"></i>
                                <span>Proyectos</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(currentController == "Registro" ? "active" : "")" asp-controller="Registro" asp-action="Crear">
                                <i class="bi bi-plus-square-fill"></i>
                                <span>Registro</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="pb-3">
        <div class="container-fluid">
            @RenderBody()
        </div>
    </main>
    <nav class="mobile-nav">
        <a asp-controller="Dashboard" asp-action="Index" class="mobile-nav-link @(currentController == "Dashboard" ? "active" : "")">
            <i class="bi bi-grid-1x2-fill"></i>
            <span>Dashboard</span>
        </a>
        <a asp-controller="Proyecto" asp-action="Index" class="mobile-nav-link @(currentController == "Proyecto" ? "active" : "")">
            <i class="bi bi-map-fill"></i>
            <span>Proyectos</span>
        </a>
        <a asp-controller="Registro" asp-action="Crear" class="mobile-nav-link @(currentController == "Registro" ? "active" : "")">
            <i class="bi bi-plus-square-fill"></i>
            <span>Registro</span>
        </a>
        <button type="button" id="more-modules-btn" class="mobile-nav-link">
            <i class="bi bi-grid-3x3-gap-fill"></i>
            <span>Más</span>
        </button>
    </nav>
    <div id="mobile-modules-sheet">
        <div class="sheet-header">
            <h4>Todos los Módulos</h4>
            <button type="button" id="close-sheet-btn">&times;</button>
        </div>
        <div class="sheet-content">
            <a href="#" class="sheet-link">
                <i class="bi bi-book-fill"></i>
                <span>Catálogo de Conceptos</span>
            </a>
            <a href="#" class="sheet-link">
                <i class="bi bi-file-earmark-text-fill"></i>
                <span>Reportes Financieros</span>
            </a>
            <a href="#" class="sheet-link">
                <i class="bi bi-camera-fill"></i>
                <span>Reporte Fotográfico</span>
            </a>
            <a href="#" class="sheet-link">
                <i class="bi bi-people-fill"></i>
                <span>Gestionar Usuarios</span>
            </a>
            <a href="#" class="sheet-link">
                <i class="bi bi-building-fill"></i>
                <span>Gestionar Campus</span>
            </a>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        window.addEventListener('load', function () {
            const splashScreen = document.getElementById('splash-screen');

            // Tiempo de espera: debe ser un poco MÁS LARGO que tu animación
            // Tu animación más larga termina de rellenarse en 3.7s (3.2s + 0.5s)
            // Le daremos 4 segundos (4000 milisegundos) para estar seguros.
            setTimeout(function () {
                // 1. Agregamos la clase para iniciar el desvanecimiento (fade-out)
                splashScreen.classList.add('fade-out');

                // 2. Después de que termine la transición de desvanecimiento (0.5s),
                // lo ocultamos completamente para que no bloquee los clics.
                setTimeout(function () {
                    splashScreen.style.display = 'none';
                }, 500); // 500ms coincide con la transición en el CSS

            }, 4000);
        });
        document.addEventListener('DOMContentLoaded', function () {
            const sidebar = document.querySelector('.sidebar');
            const toggleButton = document.getElementById('sidebar-toggle');
            const mainContent = document.querySelector('.contenido-principal');
           // const toggleIcon = toggleButton.querySelector('i'); // Seleccionamos la etiqueta <i>
            const openBtn = document.getElementById('more-modules-btn');
            const closeBtn = document.getElementById('close-sheet-btn');
            const sheet = document.getElementById('mobile-modules-sheet');

            if (openBtn && sheet) {
                let overlay = document.createElement('div');
                overlay.className = 'sheet-overlay';
                document.body.appendChild(overlay);

                const openSheet = () => {
                    sheet.classList.add('is-open');
                    overlay.classList.add('is-open');
                };

                const closeSheet = () => {
                    sheet.classList.remove('is-open');
                    overlay.classList.remove('is-open');
                };

                openBtn.addEventListener('click', openSheet);
                closeBtn.addEventListener('click', closeSheet);
                overlay.addEventListener('click', closeSheet);
            }
            // Función para actualizar el icono
            function updateIcon() {
                if (sidebar.classList.contains('collapsed')) {
                    toggleIcon.className = 'bi bi-list'; // Ícono de menú (hamburguesa)
                    toggleButton.title = 'Expandir menú';
                } else {
                    toggleIcon.className = 'bi bi-arrow-left'; // Ícono de flecha
                    toggleButton.title = 'Contraer menú';
                }
            }

            // Evento de clic
            toggleButton.addEventListener('click', function () {
                sidebar.classList.toggle('collapsed');
                mainContent.classList.toggle('collapsed');
                updateIcon(); // Llamamos a la función para que cambie el ícono
            });

            // Asegurarse de que el ícono sea el correcto al cargar la página
            updateIcon();
        });
    
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>