@model ProyectoCGAPYS.ViewModels.ProyectoDetalleViewModel

@{
    ViewData["Title"] = "Detalle del Proyecto";
}
        
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const alertContainer = document.getElementById('temp-data-alert');

        if (alertContainer) {
            const errorMessage = alertContainer.getAttribute('data-message');

            Swal.fire({
                icon: 'error',
                title: '¡Error!',
                text: errorMessage,
                background: '#1e2837', // Fondo oscuro para la alerta
                color: '#f0f0f0',      // Texto blanco
                confirmButtonColor: '#2a7fff' // Azul principal
            });
        }
    });


</script>

<style>
    /* === Paleta de Colores y Variables Globales === */
    :root {
        --color-oro-principal: #D4AF37;
        --color-verde-completado: #0B2D48;
        --color-gris-pendiente: white;

        /* Colores de texto para fondos claros/traslúcidos */
        --color-texto-principal: #212529;
        --color-texto-secundario: #6c757d;

        /* Variables para el efecto Glassmorphism */
        --color-fondo-glass: rgba(255, 255, 255, 0.65); /* Blanco traslúcido para buena legibilidad */
        --blur-efecto: blur(10px);
        --borde-glass: 1px solid rgba(255, 255, 255, 0.3);
    }

    /* === Paneles con Efecto Glassmorphism === */
    .project-header,
    .tab-content .tab-pane {
        background: var(--color-fondo-glass);
        backdrop-filter: var(--blur-efecto);
        -webkit-backdrop-filter: var(--blur-efecto); /* Soporte para Safari */
        border-radius: 12px;
        border: var(--borde-glass);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.1); /* Sombra más difusa */
    }

    /* === Estilos de Texto (Sin cambios) === */
    .project-header h2 {
        color: var(--color-texto-principal);
        font-weight: bold;
        border-bottom: 2px solid var(--color-oro-principal);
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    .project-header span {
        color: var(--color-texto-secundario);
    }

    .project-header span strong {
        color: var(--color-texto-principal);
    }

    h4, h5 {
        color: var(--color-texto-principal);
        border-left: 4px solid var(--color-oro-principal);
        padding-left: 10px;
    }
    p {
        color: var(--color-texto-secundario);
    }
    .modal-body, .modal-header .modal-title {
        color: var(--color-texto-principal);
    }


    /* === Flujo de Trabajo (Sin cambios) === */
    .workflow-steps {
        display: flex;
        justify-content: space-between;
        padding: 1rem 0;
    }

    .step {
        position: relative;
        flex-grow: 1;
        text-align: center;
        z-index: 1;
    }

    .step span {
        padding: 8px 25px;
        border-radius: 50px;
        font-weight: 600;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        background-color: var(--color-gris-pendiente);
        color: var(--color-texto-secundario);
    }

    .step:not(:last-child)::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        height: 3px;
        transform: translateY(-50%);
        z-index: -1;
        transition: background-color 0.4s ease;
        background-color: var(--color-gris-pendiente);
    }

    .step.completed span {
        background-color: var(--color-verde-completado);
        color: white;
    }

    .step.completed:not(:last-child)::after {
        background-color: var(--color-verde-completado);
    }

    .step.active span {
        background-color: var(--color-oro-principal);
        color: white;
        transform: scale(1.1);
        box-shadow: 0 0 15px rgba(212, 175, 55, 0.7);
    }

    /* === Estilo de Botones (Sin cambios) === */
    .btn {
        border-radius: 8px;
        border: none;
        transition: all 0.2s ease-in-out;
        font-weight: 500;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    }

    .btn-primary {
        background-color: var(--color-oro-principal);
        color: white;
    }

    .btn-primary:hover {
        background-color: #b38f65;
        color: white;
    }
    
    .btn-secondary {
        background-color: #6c757d;
    }

    .btn-light {
        background-color: rgba(255, 255, 255, 0.3); /* Botón adaptado a fondo de cristal */
        color: var(--color-texto-principal);
        border: 1px solid rgba(255, 255, 255, 0.5);
    }

    /* === Estilo de la Tabla Financiera (Sin cambios) === */
    .table {
        color: var(--color-texto-principal);
    }

    .table > thead {
        color: var(--color-oro-principal);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 2px solid var(--color-oro-principal);
    }
    
    .table-hover > tbody > tr:hover {
        background-color: rgba(255, 255, 255, 0.2);
    }

    .table > tfoot {
        border-top: 2px solid var(--color-oro-principal);
        color: var(--color-oro-principal);
        font-size: 1.1rem;
    }

</style>
<div class="container-fluid project-header">

    <h2>@Model.Proyecto.NombreProyecto</h2>
    <div class="d-flex justify-content-between">
        <span><strong>ID:</strong> @Model.Proyecto.Id</span>
        <span><strong>Responsable:</strong> @Model.Proyecto.NombreResponsable</span>
        <span class="badge bg-success status-badge" style="color:white">@Model.Proyecto.Estatus.ToUpper()</span>
    </div>
</div>

<hr />

<div class="tab-content" id="projectTabsContent">
    @if (Model.TabActiva == "resumen")
    {
        <div class="tab-pane fade show active" role="tabpanel">

          <h4 class="mb-3">Flujo de Trabajo</h4>
<div class="workflow-steps mb-5">
    @{
        // Obtenemos el orden de la fase actual del proyecto.
        var ordenFaseActual = Model.Proyecto.Fase.Orden;

        // Esta pequeña función nos ayuda a decidir qué clase CSS usar para cada paso.
        string GetClassParaPaso(int ordenDelPaso)
        {
            if (ordenDelPaso == ordenFaseActual)
            {
                return "active"; // La fase actual
            }
            if (ordenDelPaso < ordenFaseActual)
            {
                return "completed"; // Una fase ya superada
            }
            return ""; // Una fase futura
        }
    }

    @* Usamos la función para asignar la clase correcta a cada paso. *@
    <div class="step @GetClassParaPaso(1)"><span>Análisis</span></div>
    <div class="step @GetClassParaPaso(2)"><span>En elaboración de presupuesto</span></div>
    <div class="step @GetClassParaPaso(3)"><span>Anteproyecto</span></div>
    <div class="step @GetClassParaPaso(4)"><span>Licitación</span></div>
    <div class="step @GetClassParaPaso(5)"><span>Ejecución</span></div>
    <div class="step @GetClassParaPaso(6)"><span>Finalizado</span></div>
</div>

            @* === 2. INFORMACIÓN GENERAL === *@
            <h4 class="mb-3">Información General</h4>
            <div class="row mb-4">
                <div class="col-md-6">
                    <h5>Descripción del Proyecto</h5>
                    <p>@Model.Proyecto.Descripcion</p>
                </div>
             
            </div>

            @* === 3. BOTONES DE ACCIÓN === *@
            <hr />
            <div class="text-end">
                @if (Model.Proyecto.Estatus == "Análisis")
                {
                    <button class="btn btn-primary">Aprobar y Enviar a Anteproyecto</button>
                }
                @if (Model.Proyecto.Estatus == "En Licitación")
                {
                    <button class="btn btn-primary">Asignar Contratista</button>
                }
                <button class="btn btn-secondary">Guardar Cambios</button>
                <button class="btn btn-danger">Cancelar Proyecto</button>
            </div>
        </div>
    }

    @if (Model.TabActiva == "financiero")
    {
        <div class="tab-pane fade show active" role="tabpanel">
            <h4>Desglose de Presupuesto</h4>
            <div class="text-end mb-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#agregarCostoModal">
    <i class="fas fa-plus"></i> Agregar Concepto
</button
            </div>

            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Clave</th>
                        <th>Descripción del Concepto</th>
                        <th>Unidad</th>
                        <th class="text-end">Cantidad</th>
                        <th class="text-end">Precio Unitario</th>
                        <th class="text-end">Importe</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var costo in Model.CostosDelProyecto)
                    {
                        <tr>
                            <td>@costo.Concepto.Clave</td>
                            <td>@costo.Concepto.Descripcion</td>
                            <td>@costo.Concepto.Unidad</td>
                            <td class="text-end">@costo.Cantidad</td>
                            <td class="text-end">@costo.PrecioUnitario.ToString("C")</td>
                            <td class="text-end fw-bold">@costo.ImporteTotal.ToString("C")</td>
                            <td class="text-end">
                    <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editarCostoModal-@costo.Id">
                        <i class="fas fa-pencil-alt"></i> Editar
                    </button>
                    <button class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#eliminarCostoModal-@costo.Id">
                        <i class="fas fa-trash-alt"></i> Eliminar
                    </button>
                </td>
                        </tr>
          
                    
                    
                    
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="5" class="text-end fw-bold fs-5">Total del Presupuesto:</td>
                        <td class="text-end fw-bold fs-5">
                            @Model.CostosDelProyecto.Sum(c => c.ImporteTotal).ToString("C")
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>

      
    }
</div>
<div class="modal fade" id="agregarCostoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Proyectos" asp-action="AgregarCosto" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Agregar Nuevo Concepto al Presupuesto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    @* Campo oculto para mandar el ID del proyecto actual *@
                    <input type="hidden" name="IdProyectoFk" value="@Model.Proyecto.Id" />

                    <div class="mb-3">
                        <label class="form-label">Concepto</label>
                        @* Usamos un ViewBag que crearemos en el controlador para llenar el dropdown *@
                        <select name="IdConceptoFk" class="form-select" asp-items="ViewBag.Conceptos">
                            <option value="">-- Seleccionar un concepto --</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Cantidad</label>
                        <input type="number" name="Cantidad" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Precio Unitario</label>
                        <input type="number" step="0.01" name="PrecioUnitario" class="form-control" required />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar Concepto</button>
                </div>

            </form>
        </div>
    </div>
</div>
   @foreach (var costo in Model.CostosDelProyecto)
    {
                      <div class="modal fade" id="editarCostoModal-@costo.Id" >
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Proyectos" asp-action="EditarCosto" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Concepto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" value="@costo.Id" />
                    <input type="hidden" name="IdProyectoFk" value="@costo.IdProyectoFk" />
                    
                    <div class="mb-3">
                        <label>Cantidad</label>
                        <input type="number" name="Cantidad" class="form-control" value="@costo.Cantidad" required />
                    </div>
                    <div class="mb-3">
                        <label>Precio Unitario</label>
                        <input type="number" step="0.01" name="PrecioUnitario" class="form-control" value="@costo.PrecioUnitario" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="eliminarCostoModal-@costo.Id" >
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Proyectos" asp-action="EliminarCosto" method="post">
                 <div class="modal-header">
                    <h5 class="modal-title">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" value="@costo.Id" />
                    <input type="hidden" name="IdProyectoFk" value="@costo.IdProyectoFk" />
                    <p>¿Estás seguro de que deseas eliminar el concepto **"@costo.Concepto.Descripcion"** del presupuesto?</p>
                    <p class="text-danger">Esta acción no se puede deshacer.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Sí, Eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>
         
    }
@if (TempData["ErrorMessage"] != null)
{
    <div id="temp-data-alert" data-message="@TempData["ErrorMessage"]" style="display: none;"></div>
}

